Array problem.

Similar to problem Best Time to Buy and Sell Stock, except that we can buy and sell multiple times.

Actually problem gets more straightforward in this problem. We can simple compute the profits in each continuous increasing subsequences and
add them up. Use two pointers we can easily solve this problem.

Code:

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size()<1) return 0;
        int profit = 0, tempProfit = 0;
        int ptr1 = 0, ptr2 = 1;
        while(ptr2 < prices.size()){
            if(prices[ptr2] < prices[ptr2-1]){
                profit += prices[ptr2-1] - prices[ptr1];
                ptr1 = ptr2;
            }
            else if(ptr2 == prices.size() - 1){
                profit += prices[ptr2] - prices[ptr1];
            }
            ptr2++;
        }
        return profit;
    }
};
