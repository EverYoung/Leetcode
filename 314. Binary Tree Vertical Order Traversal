class Solution {
public:
    vector<vector<int>> verticalOrder(TreeNode* root) {
        map<int, vector<int>> columns;
        vector<vector<int>> res;
        if(root == NULL) return res;
        
        queue<pair<TreeNode*, int>> q;
        q.push(make_pair(root, 0));
        while(!q.empty()){
            int size = q.size();
            for(int i = 0; i < size; i++){
                TreeNode* cur = q.front().first;
                int dist = q.front().second;
                q.pop();
                columns[dist].push_back(cur->val);
                if(cur->left) q.push(make_pair(cur->left, dist - 1));
                if(cur->right) q.push(make_pair(cur->right, dist + 1));
            }
        }
        for(auto col : columns){
            res.push_back(col.second);
        }
        return res;
    }
};
