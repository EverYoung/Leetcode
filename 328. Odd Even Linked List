Use two dummy nodes to keep the head of odd group and even group. Use a counter to help decide whether the current node is an odd or even
node. Then all we need to do is traverse the linkedlist and link nodes in required order.

class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode* dummy_odd = new ListNode(0);
        ListNode* dummy_even = new ListNode(0);
        ListNode *odd = dummy_odd, *even = dummy_even;
        int count = 1;
        while(head != NULL){
            if(count % 2 != 0){
                odd->next = head;
                odd = odd->next;
            }
            else{
                even->next = head;
                even = even->next;
            }
            count++;
            head = head->next;
            odd->next = NULL;
            even->next = NULL;
        }
        odd->next = dummy_even->next;
        return dummy_odd->next;  
    }
};
