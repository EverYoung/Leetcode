Two Pointers
When sum is less than target, then we move right pointer all the way to left pointer, all the possible triplets along the way have their sum
less than target. Therefore, count += right - left.

class Solution {
public:
    int threeSumSmaller(vector<int>& nums, int target) {
        if(nums.size() < 3) return 0;
        int count = 0;
        std::sort(nums.begin(), nums.end());
        for(int i = 0; i < nums.size() - 2; i++){
            // if(i > 0 && nums[i] == nums[i - 1]) continue;
            if(nums[i] + nums[i + 1] + nums[i + 2] >= target) break;
            
            int left = i + 1, right = nums.size() - 1;
            while(left < right){
                int sum = nums[i] + nums[left] + nums[right];
                if(sum < target){
                    count += right - left;
                    left++;
                }
                else right--;
            }
        }
        return count;
    }
};
