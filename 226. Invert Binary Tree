1. DFS
DFS traverse all nodes and for each node exchange its right and left branches.

class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root == NULL) return root;
        stack<TreeNode*> st;
        st.push(root);
        while(!st.empty()){
            TreeNode* cur = st.top();
            st.pop();
            if(cur->left != NULL) st.push(cur->left);
            if(cur->right != NULL) st.push(cur->right);
            TreeNode* temp = cur->left;
            cur->left = cur->right;
            cur->right = temp;
        }
        return root;
    }
}; 
