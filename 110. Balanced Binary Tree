1. DFS top-down

class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if(!root) return true;
        int left_depth = findDepth(root->left);
        int right_depth = findDepth(root->right);
        if(left_depth - right_depth > 1 || left_depth - right_depth < -1) return false;
        return isBalanced(root->left) && isBalanced(root->right);
    }
    
    int findDepth(TreeNode* root){
        if(!root) return 0;
        return max(findDepth(root->left) + 1, findDepth(root->right) + 1);
    }
};

2. DFS bottom-up

public:
    bool isBalanced(TreeNode* root) {
        if(!root) return true;
        return findDepth(root) != -1;
    }
    
    int findDepth(TreeNode* root){
        if(!root) return 0;
        int left_depth = findDepth(root->left);
        if(left_depth == -1) return -1;
        int right_depth = findDepth(root->right);
        if(right_depth == -1) return -1;
        
        if(left_depth - right_depth > 1 || left_depth - right_depth < -1) return -1;
        return max(left_depth, right_depth) + 1;
    }
};
