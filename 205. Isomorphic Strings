Use a hashmap to store the replacement correspondence between characters in s and in t. Use a set to store the characters in t that already
has a correspondent characters in s.

Code:

class Solution {
public:
    bool isIsomorphic(string s, string t) {
        if(s.size() != t.size()) return false;
        int n = s.size();
        unordered_map<char, char> hashmap;
        unordered_set<char> char_set;
        for(int i = 0; i < n; ++i){
            if(hashmap.find(s[i]) != hashmap.end()){
                if(hashmap[s[i]] != t[i]) return false;
            }
            else{
                if(char_set.find(t[i]) != char_set.end()) return false;
                else {
                    hashmap.insert(pair<char, char>(s[i], t[i]));
                    char_set.insert(t[i]);
                }
            }
        }
        return true;
    }
};
